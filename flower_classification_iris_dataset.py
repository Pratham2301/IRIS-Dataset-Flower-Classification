# -*- coding: utf-8 -*-
"""flower_classification_iris_dataset.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1f1UO3GoSWCg4Wn_DpNk4-hQNMqYy0ptM
"""

import pickle
from sklearn.neighbors import KNeighborsClassifier
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

from sklearn.datasets import load_iris
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score

iris = load_iris()

print(iris.keys())
print(iris.feature_names)
print(iris.target_names)

# iris.DESCR

data = iris.data
target = iris.target

training_data, testing_data, training_target, testing_target = train_test_split(
    data, target, test_size=0.30, random_state=4)

# print(len(data))
# print(len(target))

# print(len(training_data))
# print(len(training_target))

# print(len(testing_data))
# print(len(testing_target))

# training_data
# training_target
# testing_data
# testing_target

"""# **USE KNN Classifier**

"""


knn = KNeighborsClassifier(n_neighbors=15)

"""# TRAIN KNN Classifier"""

knn.fit(training_data, training_target)

"""# Evaluate Model"""

predicted_target = knn.predict(testing_data)
predicted_target

accuracy_score(testing_target, predicted_target)

"""# Classification with user input"""

# sepal_len = int(input("Sepal Length : "))
# sepal_wid = int(input("Sepal width : "))
# petal_len = int(input("Petal Length : "))
# petal_wid = int(input("Petal width : "))
sepal_len = 1
sepal_wid = 2
petal_len = 1
petal_wid = 2

knn.predict([[sepal_len, sepal_wid, petal_len, petal_wid]])

"""# USING PICKLE"""


# Save the trained model as a pickle string.
saved_model = pickle.dumps(knn)

# Load the pickled model
knn_from_pickle = pickle.loads(saved_model)

# Use the loaded pickled model to make predictions
knn_from_pickle.predict([[sepal_len, sepal_wid, petal_len, petal_wid]])

"""# Downloading model.pkl File"""

# from google.colab import files

# output = open('model.pkl', 'wb')
# pickle.dump(knn, output)
# # files.download('model.pkl')

# filename = "model.pkl"
# fileobj = open(filename, 'rb')

# model = pickle.load(fileobj)
# output = model.predict([[7.7, 2.8, 6.7, 2. ]])
# print(output)
